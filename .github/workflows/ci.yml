name: JobAI CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Run linting
        run: echo "Linting placeholder - will be implemented with actual linting rules"

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: echo "Test placeholder - will be implemented with actual tests"

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build matching service
        uses: docker/build-push-action@v4
        with:
          context: ./matching-service
          push: false
          tags: jobai/matching-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build data service
        uses: docker/build-push-action@v4
        with:
          context: ./data-service
          push: false
          tags: jobai/data-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: false
          tags: jobai/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push:
    name: Push Docker Images
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push matching service
        uses: docker/build-push-action@v4
        with:
          context: ./matching-service
          push: true
          tags: jobai/matching-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push data service
        uses: docker/build-push-action@v4
        with:
          context: ./data-service
          push: true
          tags: jobai/data-service:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: jobai/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-approval:
    name: Manual Approval for Production Deploy
    runs-on: ubuntu-latest
    needs: push
    environment: production
    steps:
      - name: Manual approval step
        run: echo "Deployment to production approved"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-approval
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to production
        run: echo "Deploying to production environment"
